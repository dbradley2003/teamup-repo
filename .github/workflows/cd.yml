name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # Step 1: Check Out Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Create backend .env file
      - name: Create Backend .env File
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> backend/.env
          echo "DB_PWD=${{ secrets.DB_PWD }}" >> backend/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> backend/.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> backend/.env
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> backend/.env
          echo "AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}" >> backend/.env
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> backend/.env
          echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> backend/.env

      # Step 3: Deploy with Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker-compose down       # Stop and remove old containers
          docker-compose pull       # Pull updated images
          docker-compose up -d      # Start services in detached mode
